#!/bin/bash

PROGNAME=`basename $0`
DB_CACHE_ARG=
TW_FILE='mmgen-tracking-wallet.dat'
NOLISTEN_ARG=' -listen=0'

while getopts ha:d:os:tT OPT
do
	case "$OPT" in
	h)  printf "  %-16s Start an MMGen Bitcoin Core node\n" "${PROGNAME^^}:"
		echo   "  USAGE:           $PROGNAME"
		echo   "  OPTIONS:   '-h'   Print this help message"
		echo   "             '-d c' Set the -dbcache value to 'c' (default: dynamic, based on available memory)"
		echo   "             '-o'   Start in offline mode"
		echo   "             '-s n' Try connecting to node 'n'"
		echo   "             '-t'   Testing mode.  Just print the command that would be executed"
		echo   "             '-T'   Run exclusively on the Tor onion network (Tor must be running)"
		echo   "             '-a a' Additional args to be passed to bitcoind (as one arg, quoted)"
		exit ;;
	a) ADD_ARGS=" $OPTARG" ;;
	d) DB_CACHE_ARG=" -dbcache=$OPTARG" ;;
	o) OFFLINE_ARG=" -maxconnections=0" ;;
	s) ADD_NODE_ARG=" -addnode=$OPTARG" ;;
	t) TESTING=1 ;;
	T) TOR_ARGS=" -onlynet=onion -debug=tor" NOLISTEN_ARG= ;;
	*)  exit ;;
	esac
done

shift $((OPTIND-1))

if [ ! "$DB_CACHE_ARG" ]; then
	M=$(cat /proc/meminfo | grep MemAvailable | awk '{ print $2 }')
	M=$(((M / 1024) - 3000))
	if [ $M -gt 5000 ]; then M=5000 
	elif [ $M -lt 300 ]; then M= 
	fi
	[ "$M" ] && DB_CACHE_ARG=" -dbcache=$M"
fi

CMD="bitcoind -daemon -wallet=$TW_FILE$DB_CACHE_ARG$TOR_ARGS$ADD_ARGS$OFFLINE_ARG$NOLISTEN_ARG$ADD_NODE_ARG"
if [ "$TESTING" ]; then MSG='Would execute'; else MSG='Executing'; fi
echo "$MSG: $CMD"
[ ! "$TESTING" ] && eval $CMD
