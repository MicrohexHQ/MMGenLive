#!/bin/bash

PROGNAME=`basename $0`

while getopts ht OPT
do
	case "$OPT" in
	h)  printf "  %-16s Add Onion nodes to a running Bitcoin Core daemon\n" "${PROGNAME^^}:"
		echo   "  USAGE:           $PROGNAME"
		echo   "  OPTIONS:   '-h'  Print this help message"
		echo   "             '-t'  Node is running on testnet"
		exit ;;
	t)  TESTNET_ARG=' -testnet=1' ;;
	*)  exit ;;
	esac
done

shift $((OPTIND-1))


NODES=(bitcoinranliixsu.onion
bitcoin4rlfa4wqx.onion
xoxoxka3hgpokemn.onion
smith4mfhwcq7x3b.onion
xudkoztdfrsuyyou.onion
z33nukt7ngik3cpe.onion
74k54a55qbo2t34y.onion
fvpg7ltseahre7jj.onion
pcfhsdqzs6q63ryu.onion
nkf5e6b7pl4jfd4a.onion
fnh6hqbwlu227vxx.onion
cpyfqbs4fs3vnbpf.onion
ueo6royc3775ioq7.onion
in7r5ieo7ogkxbne.onion
53tsjt6zq3iasv5q.onion
rmcqxkwl6vrxbg4q.onion)

MIN_CONNS=5
for node in ${NODES[*]}; do
	echo "Adding node $node"
	eval "bitcoin-cli$TESTNET_ARG addnode $node add"
	CONNS=`bitcoin-cli$TESTNET_ARG getinfo | grep connections | tr -dc 0-9`
	[ "$CONNS" -ge "$MIN_CONNS" ] && { echo -e "Enough connections ($CONNS)\nExiting"; exit; }
	sleep 5
	echo -n "$CONNS connections.  ENTER to add another node, Ctrl-C to exit: "; read
done
